{"version":3,"sources":["utils.js","components/PokemonCard.jsx","assets/pokedex.png","components/Pokedex.jsx","components/PokemonStats.jsx","App.js","index.js"],"names":["toFirstCharUppercase","string","toUpperCase","slice","hgToKg","weight","dcToFt","height","toFixed","useStyles","makeStyles","theme","card","width","margin","transform","transition","cardContent","textAlign","img","maxWidth","minHeight","marginTop","cursor","PokemonCard","name","url","history","useHistory","useState","pokemonId","setPokemonId","pokemonImage","setPokemonImage","classes","useEffect","split","length","axios","get","then","res","data","sprites","other","dream_world","front_default","Card","className","onClick","push","Box","src","alt","display","alignItems","justifyContent","CircularProgress","circularProgress","CardContent","Typography","variant","pokedexContainer","marginBottom","appBar","backgroundColor","orange","logo","maxHeight","header","background","Pokedex","props","pokemonData","setPokemonData","results","AppBar","position","pokedex","Grid","container","map","pokemonStatsContainer","Button","fontSize","fontWeight","lineHeight","CheckCircleOutlineIcon","color","LinearProgress","divContainer","flexWrap","paddingBottom","LinearProgressWithLabel","mr","minWidth","Math","round","value","PokemonStats","match","params","pokemonDescription","setPokemonDescription","flavor_text_entries","forEach","flavor","language","flavor_text","base_experience","types","abilities","stats","hp","attack","defense","speed","specialAttack","specialDefense","element","stat","justify","xs","spacing","item","type","ability","size","Routing","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAAaA,EAAuB,SAACC,GAAD,OAClCA,GAAUA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,IAEtCC,EAAS,SAACC,GAAD,OAAYA,EAAS,IAE9BC,EAAS,SAACC,GAAD,OAAaA,EAAS,OAAOC,QAAQ,I,OCQrDC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,OAAQ,EACR,UAAW,CACTC,UAAW,2BACXC,WAAY,uBAGhBC,YAAa,CACXC,UAAW,UAEbC,IAAK,CACHC,SAAU,IACVC,UAAW,IACXC,UAAW,GACXC,OAAQ,eAgDGC,EA5CK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACrBC,EAAUC,cAEhB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAUzB,IAUhB,OARA0B,qBAAU,WACRJ,EAAaL,EAAIU,MAAM,KAAKV,EAAIU,MAAM,KAAKC,OAAS,IAEpDC,IAAMC,IAAN,4CAA+CT,EAA/C,MAA6DU,MAAK,SAACC,GACjER,EAAgBQ,EAAIC,KAAKC,QAAQC,MAAMC,YAAYC,oBAEpD,CAACpB,EAAKI,IAGP,eAACiB,EAAA,EAAD,CACEC,UAAWd,EAAQtB,KACnBqC,QAAS,kBAAMtB,EAAQuB,KAAR,mBAAyBpB,KAF1C,UAIE,cAACqB,EAAA,EAAD,CAAKjC,UAAU,SAAf,SACGc,EACC,qBAAKoB,IAAKpB,EAAcqB,IAAK5B,EAAMuB,UAAWd,EAAQf,MAEtD,cAACgC,EAAA,EAAD,CACEG,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfjD,OAAQ,OACRM,MAAO,OALT,SAOE,cAAC4C,EAAA,EAAD,CACET,UAAWd,EAAQwB,uBAK3B,cAACC,EAAA,EAAD,CAAaX,UAAWd,EAAQjB,YAAhC,SACE,cAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B7D,EAAqByB,WCvExC,MAA0B,oCCQnChB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmD,iBAAkB,CAChBxC,UAAW,IACXyC,aAAc,IAGhBC,OAAQ,CACNC,gBAAiBC,IAAO,MAG1BC,KAAM,CACJC,UAAW,IACXhD,SAAU,KAGZiD,OAAQ,CACNf,QAAS,OACTC,WAAY,SACZC,eAAgB,UAGlBc,WAAY,CACVA,WAAY,kEAyCDC,EArCC,SAACC,GACf,IAAMtC,EAAUzB,IAChB,EAAsCoB,mBAAS,IAA/C,mBAAO4C,EAAP,KAAoBC,EAApB,KAQA,OANAvC,qBAAU,WACRG,IAAMC,IAAN,+CAAyDC,MAAK,SAACC,GAC7DiC,EAAejC,EAAIC,KAAKiC,cAEzB,IAGD,mCACE,gCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQ7B,UAAWd,EAAQ8B,OAA5C,SACE,qBAAKhB,UAAWd,EAAQmC,OAAxB,SACE,qBAAKjB,IAAK0B,EAASzB,IAAI,OAAOL,UAAWd,EAAQiC,WAGrD,cAACY,EAAA,EAAD,CACEC,WAAS,EACThC,UAAWd,EAAQ4B,iBACnBN,eAAe,SAHjB,SAKGiB,EAAYQ,KAAI,SAACR,GAAD,OACf,cAAC,EAAD,CAEEhD,KAAMgD,EAAYhD,KAClBC,IAAK+C,EAAY/C,KAFZ+C,EAAYhD,WAMvB,cAACmD,EAAA,EAAD,CAAQC,SAAS,QAAQ7B,UAAWd,EAAQ8B,e,2CCjD9CvD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCQ,IAAK,CACHC,SAAU,IACVC,UAAW,IACXC,UAAW,SAGb4D,sBAAuB,CACrB5B,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBlC,UAAW,KAGb6D,OAAQ,CACNrE,OAAQ,GAGV8C,WAAY,CACVwB,SAAU,GACVC,WAAY,IACZC,WAAY,KAGdC,uBAAwB,CACtBC,MAAO,WAGTC,eAAgB,CACdlF,OAAQ,GACRO,OAAQ,EACRiD,aAAc,GAGhB2B,aAAc,CACZpC,QAAS,OACTC,WAAY,SACZoC,SAAU,QAEZ/E,KAAM,CACJQ,SAAU,QACVwE,cAAe,QAInB,SAASC,EAAwBrB,GAC/B,OACE,eAACrB,EAAA,EAAD,CAAKG,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAACJ,EAAA,EAAD,CAAKtC,MAAM,OAAOiF,GAAI,EAAtB,SACE,cAACL,EAAA,EAAD,aAAgB5B,QAAQ,eAAkBW,MAE5C,cAACrB,EAAA,EAAD,CAAK4C,SAAU,GAAf,SACE,cAACnC,EAAA,EAAD,CAAYC,QAAQ,QAAQ2B,MAAM,gBAAlC,mBAAsDQ,KAAKC,MACzDzB,EAAM0B,OADR,YAQR,IA4PeC,EA5PM,SAAC3B,GACpB,IAAM7C,EAAUC,cAEVM,EAAUzB,IACRqB,EAAc0C,EAAM4B,MAAMC,OAA1BvE,UACR,EAAsCD,mBAAS,IAA/C,mBAAO4C,EAAP,KAAoBC,EAApB,KACA,EAAwC7C,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoDJ,mBAAS,IAA7D,mBAAOyE,EAAP,KAA2BC,EAA3B,KAEApE,qBAAU,WACRG,IAAMC,IAAN,4CAA+CT,EAA/C,MAA6DU,MAAK,SAACC,GACjEiC,EAAejC,EAAIC,MACnBT,EAAgBQ,EAAIC,KAAKC,QAAQC,MAAMC,YAAYC,kBAGrDR,IACGC,IADH,oDACoDT,EADpD,MAEGU,MAAK,SAACC,GACLA,EAAIC,KAAK8D,oBAAoBC,SAAQ,SAACC,GACP,OAAzBA,EAAOC,SAASlF,MAClB8E,EAAsBG,EAAOE,qBAIpC,CAAC9E,IAEJ,IAAQL,EACNgD,EADMhD,KAAMoF,EACZpC,EADYoC,gBAAiBtG,EAC7BkE,EAD6BlE,OAAQF,EACrCoE,EADqCpE,OAAQyG,EAC7CrC,EAD6CqC,MAAOC,EACpDtC,EADoDsC,UAAWC,EAC/DvC,EAD+DuC,MAGjE,EAAoE,GAA9DC,EAAN,EAAMA,GAAIC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,cAAeC,EAAjD,EAAiDA,eA4BjD,OA1BIN,GACFA,EAAMP,SAAQ,SAACc,GACb,OAAQA,EAAQC,KAAK/F,MACnB,IAAK,KACHwF,EAAKM,EAAO,UACZ,MACF,IAAK,SACHL,EAASK,EAAO,UAChB,MACF,IAAK,UACHJ,EAAUI,EAAO,UACjB,MACF,IAAK,QACHH,EAAQG,EAAO,UACf,MACF,IAAK,iBACHF,EAAgBE,EAAO,UACvB,MACF,IAAK,kBACHD,EAAiBC,EAAO,cAQ9B,qCACE,cAACxC,EAAA,EAAD,CACEC,WAAS,EACTyC,QAAQ,SACRzE,UAAWd,EAAQgD,sBAHrB,SAKE,cAACH,EAAA,EAAD,CAAM2C,GAAI,EAAGC,QAAS,EAAtB,SACE,cAAC5E,EAAA,EAAD,CAAMc,QAAQ,WAAWb,UAAWd,EAAQtB,KAA5C,SACE,eAACmE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAM6C,MAAI,EAACF,GAAI,EAAf,SACG1F,EACC,cAACmB,EAAA,EAAD,CAAKjC,UAAU,SAAf,SACE,qBACEkC,IAAKpB,EACLqB,IAAK5B,EACLuB,UAAWd,EAAQf,QAIvB,cAACgC,EAAA,EAAD,CACEG,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfjD,OAAQ,OACRM,MAAO,OALT,SAOE,cAAC4C,EAAA,EAAD,CACET,UAAWd,EAAQwB,uBAK3B,eAACqB,EAAA,EAAD,CAAM6C,MAAI,EAACF,GAAI,EAAf,UACE,cAAC9D,EAAA,EAAD,UACE,6BAAK5D,EAAqByB,OAE5B,eAACmC,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,UACE,4CACA,uBAFF,IAEa0C,KAEb,eAAC1C,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,UACE,gDADF,IAC0BiD,KAE1B,eAACjD,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,UACE,uCADF,IACiBtD,EAAOC,GADxB,WAGA,eAACqD,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,UACE,uCADF,IACiBxD,EAAOC,GADxB,SAGA,uBACA,cAACuD,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,uCAEDkD,GACCA,EAAM7B,KAAI,SAACsC,GACT,IAAM9F,EAAO8F,EAAQM,KAAKpG,KAC1B,OACE,cAACmC,EAAA,EAAD,CAAuBZ,UAAWd,EAAQ0B,WAA1C,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAEpBvF,EAAqByB,OALTA,MAUvB,uBACA,cAACmC,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,4CAEDmD,GACCA,EAAU9B,KAAI,SAACsC,GACb,IAAM9F,EAAO8F,EAAQO,QAAQrG,KAC7B,OACE,cAACmC,EAAA,EAAD,CAAuBZ,UAAWd,EAAQ0B,WAA1C,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAEpBvF,EAAqByB,OALTA,MAWvB,uBACA,cAACmC,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,wCAEF,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAM6C,MAAI,EAACF,GAAI,EAAf,UACE,cAAC9D,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,UAOF,cAAC3B,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,cAOF,cAAC3B,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,eAOF,cAAC3B,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,aAOF,cAAC3B,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,sBAOF,cAAC3B,EAAA,EAAD,CAAYZ,UAAWd,EAAQ0B,WAA/B,SACE,sBAAKZ,UAAWd,EAAQwD,aAAxB,UACE,cAAC,IAAD,CACE1C,UAAWd,EAAQqD,yBAFvB,0BAQJ,eAACR,EAAA,EAAD,CAAM6C,MAAI,EAACF,GAAI,EAAf,UACE,cAAC7B,EAAD,CACEhC,QAAQ,cACRqC,MAAOe,EACPjE,UAAWd,EAAQuD,iBAErB,cAACI,EAAD,CACEhC,QAAQ,cACRqC,MAAOgB,EACPlE,UAAWd,EAAQuD,iBAErB,cAACI,EAAD,CACEhC,QAAQ,cACRqC,MAAOiB,EACPnE,UAAWd,EAAQuD,iBAErB,cAACI,EAAD,CACEhC,QAAQ,cACRqC,MAAOkB,EACPpE,UAAWd,EAAQuD,iBAErB,cAACI,EAAD,CACEhC,QAAQ,cACRqC,MAAOmB,EACPrE,UAAWd,EAAQuD,iBAErB,cAACI,EAAD,CACEhC,QAAQ,cACRqC,MAAOoB,EACPtE,UAAWd,EAAQuD,mCASnC,uBACA,cAACtC,EAAA,EAAD,CAAKjC,UAAU,SAAf,SACE,cAACiE,EAAA,EAAD,CACEtB,QAAQ,YACRkE,KAAK,QACL/E,UAAWd,EAAQiD,OACnBlC,QAAS,kBAAMtB,EAAQuB,KAAR,aAJjB,2BCrTF8E,G,MAAU,WACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW5D,IACxC,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,sBAAsBC,UAAWhC,WAc5CiC,MARf,WACE,OACE,qBAAKpF,UAAU,MAAf,SACE,cAAC,EAAD,OChBNqF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2a0b15d6.chunk.js","sourcesContent":["export const toFirstCharUppercase = (string) =>\r\n  string && string[0].toUpperCase() + string.slice(1);\r\n\r\nexport const hgToKg = (weight) => weight / 10;\r\n\r\nexport const dcToFt = (height) => (height / 3.048).toFixed(2);\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toFirstCharUppercase } from \"../utils\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"25vw\",\r\n    margin: 5,\r\n    \"&:hover\": {\r\n      transform: \"scale3d(1.15, 1.15, 1.0)\",\r\n      transition: \"all 0.5s ease-out;\",\r\n    },\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n  },\r\n  img: {\r\n    maxWidth: 200,\r\n    minHeight: 200,\r\n    marginTop: 15,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst PokemonCard = ({ name, url }) => {\r\n  const history = useHistory();\r\n\r\n  const [pokemonId, setPokemonId] = useState(\"\");\r\n  const [pokemonImage, setPokemonImage] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setPokemonId(url.split(\"/\")[url.split(\"/\").length - 2]);\r\n\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`).then((res) => {\r\n      setPokemonImage(res.data.sprites.other.dream_world.front_default);\r\n    });\r\n  }, [url, pokemonId]);\r\n\r\n  return (\r\n    <Card\r\n      className={classes.card}\r\n      onClick={() => history.push(`/pokemon/${pokemonId}`)}\r\n    >\r\n      <Box textAlign=\"center\">\r\n        {pokemonImage ? (\r\n          <img src={pokemonImage} alt={name} className={classes.img}></img>\r\n        ) : (\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            height={\"100%\"}\r\n            width={\"100%\"}\r\n          >\r\n            <CircularProgress\r\n              className={classes.circularProgress}\r\n            ></CircularProgress>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\">{toFirstCharUppercase(name)}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","export default __webpack_public_path__ + \"static/media/pokedex.2800773d.png\";","import { useEffect, useState } from \"react\";\r\nimport { Grid, AppBar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport pokedex from \"../assets/pokedex.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokedexContainer: {\r\n    marginTop: 100,\r\n    marginBottom: 50,\r\n  },\r\n\r\n  appBar: {\r\n    backgroundColor: orange[500],\r\n  },\r\n\r\n  logo: {\r\n    maxHeight: 220,\r\n    maxWidth: 220,\r\n  },\r\n\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  background: {\r\n    background: \"linear-gradient(to top right, #87ceeb, #af97f0 120%) fixed\",\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`).then((res) => {\r\n      setPokemonData(res.data.results); //get Kanto region pokemons\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <div className={classes.header}>\r\n            <img src={pokedex} alt=\"logo\" className={classes.logo} />\r\n          </div>\r\n        </AppBar>\r\n        <Grid\r\n          container\r\n          className={classes.pokedexContainer}\r\n          justifyContent=\"center\"\r\n        >\r\n          {pokemonData.map((pokemonData) => (\r\n            <PokemonCard\r\n              key={pokemonData.name}\r\n              name={pokemonData.name}\r\n              url={pokemonData.url}\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <AppBar position=\"fixed\" className={classes.appBar} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toFirstCharUppercase, hgToKg, dcToFt } from \"../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: 300,\r\n    minHeight: 300,\r\n    marginTop: \"10rem\",\r\n  },\r\n\r\n  pokemonStatsContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 100,\r\n  },\r\n\r\n  Button: {\r\n    margin: 5,\r\n  },\r\n\r\n  Typography: {\r\n    fontSize: 18,\r\n    fontWeight: 500,\r\n    lineHeight: 1.5,\r\n  },\r\n\r\n  CheckCircleOutlineIcon: {\r\n    color: \"#3f51b5\",\r\n  },\r\n\r\n  LinearProgress: {\r\n    height: 20,\r\n    margin: 3,\r\n    marginBottom: 4,\r\n  },\r\n\r\n  divContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  card: {\r\n    maxWidth: \"100vw\",\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst PokemonStats = (props) => {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const { pokemonId } = props.match.params;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [pokemonImage, setPokemonImage] = useState(\"\");\r\n  const [pokemonDescription, setPokemonDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`).then((res) => {\r\n      setPokemonData(res.data);\r\n      setPokemonImage(res.data.sprites.other.dream_world.front_default);\r\n    });\r\n\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`)\r\n      .then((res) => {\r\n        res.data.flavor_text_entries.forEach((flavor) => {\r\n          if (flavor.language.name === \"en\") {\r\n            setPokemonDescription(flavor.flavor_text);\r\n          }\r\n        });\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const { name, base_experience, height, weight, types, abilities, stats } =\r\n    pokemonData;\r\n\r\n  let { hp, attack, defense, speed, specialAttack, specialDefense } = \"\";\r\n\r\n  if (stats)\r\n    stats.forEach((element) => {\r\n      switch (element.stat.name) {\r\n        case \"hp\":\r\n          hp = element[\"base_stat\"];\r\n          break;\r\n        case \"attack\":\r\n          attack = element[\"base_stat\"];\r\n          break;\r\n        case \"defense\":\r\n          defense = element[\"base_stat\"];\r\n          break;\r\n        case \"speed\":\r\n          speed = element[\"base_stat\"];\r\n          break;\r\n        case \"special-attack\":\r\n          specialAttack = element[\"base_stat\"];\r\n          break;\r\n        case \"special-defense\":\r\n          specialDefense = element[\"base_stat\"];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        className={classes.pokemonStatsContainer}\r\n      >\r\n        <Grid xs={7} spacing={1}>\r\n          <Card variant=\"outlined\" className={classes.card}>\r\n            <Grid container>\r\n              <Grid item xs={5}>\r\n                {pokemonImage ? (\r\n                  <Box textAlign=\"center\">\r\n                    <img\r\n                      src={pokemonImage}\r\n                      alt={name}\r\n                      className={classes.img}\r\n                    ></img>\r\n                  </Box>\r\n                ) : (\r\n                  <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    height={\"100%\"}\r\n                    width={\"100%\"}\r\n                  >\r\n                    <CircularProgress\r\n                      className={classes.circularProgress}\r\n                    ></CircularProgress>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n                <Typography>\r\n                  <h1>{toFirstCharUppercase(name)}</h1>\r\n                </Typography>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Description</b>\r\n                  <br></br> {pokemonDescription}\r\n                </Typography>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Base Experience</b> {base_experience}\r\n                </Typography>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Height</b> {dcToFt(height)} feet\r\n                </Typography>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Weight</b> {hgToKg(weight)} kg\r\n                </Typography>\r\n                <br></br>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Type</b>\r\n                </Typography>\r\n                {types &&\r\n                  types.map((element) => {\r\n                    const name = element.type.name;\r\n                    return (\r\n                      <Typography key={name} className={classes.Typography}>\r\n                        <div className={classes.divContainer}>\r\n                          <CheckCircleOutlineIcon\r\n                            className={classes.CheckCircleOutlineIcon}\r\n                          />\r\n                          {toFirstCharUppercase(name)}\r\n                        </div>\r\n                      </Typography>\r\n                    );\r\n                  })}\r\n                <br></br>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Abilities</b>\r\n                </Typography>\r\n                {abilities &&\r\n                  abilities.map((element) => {\r\n                    const name = element.ability.name;\r\n                    return (\r\n                      <Typography key={name} className={classes.Typography}>\r\n                        <div className={classes.divContainer}>\r\n                          <CheckCircleOutlineIcon\r\n                            className={classes.CheckCircleOutlineIcon}\r\n                          />\r\n                          {toFirstCharUppercase(name)}\r\n                        </div>\r\n                      </Typography>\r\n                    );\r\n                  })}\r\n\r\n                <br></br>\r\n                <Typography className={classes.Typography}>\r\n                  <b>Stats</b>\r\n                </Typography>\r\n                <Grid container>\r\n                  <Grid item xs={3}>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        HP\r\n                      </div>\r\n                    </Typography>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        Attack\r\n                      </div>\r\n                    </Typography>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        Defense\r\n                      </div>\r\n                    </Typography>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        Speed\r\n                      </div>\r\n                    </Typography>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        Special Attack\r\n                      </div>\r\n                    </Typography>\r\n                    <Typography className={classes.Typography}>\r\n                      <div className={classes.divContainer}>\r\n                        <CheckCircleOutlineIcon\r\n                          className={classes.CheckCircleOutlineIcon}\r\n                        />\r\n                        Special Defense\r\n                      </div>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={hp}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={attack}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={defense}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={speed}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={specialAttack}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                    <LinearProgressWithLabel\r\n                      variant=\"determinate\"\r\n                      value={specialDefense}\r\n                      className={classes.LinearProgress}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <Box textAlign=\"center\">\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          className={classes.Button}\r\n          onClick={() => history.push(`/pokedex`)}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonStats;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Pokedex from \"./components/Pokedex\";\nimport PokemonStats from \"./components/PokemonStats\";\nimport \"./App.css\";\n\nconst Routing = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/pokedex\" component={Pokedex} />\n        <Route exact path=\"/pokemon/:pokemonId\" component={PokemonStats} />\n      </Switch>\n    </Router>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}